{
  "version": 3,
  "sources": ["../../@thirdweb-dev/react/dist/RainbowWallet-fd62fdee.browser.esm.js"],
  "sourcesContent": ["import { WalletConnect } from '@thirdweb-dev/wallets';\nimport { useCreateWalletInstance, useWalletContext, useConnect } from '@thirdweb-dev/react-core';\nimport { useState, useRef, useEffect } from 'react';\nimport { S as ScanScreen, i as isMobile, C as ConnectingScreen, G as GetStartedScreen } from './headlessConnectUI-0dfa5bbe.browser.esm.js';\nimport { jsx } from 'react/jsx-runtime';\nimport './basic-7307bc92.browser.esm.js';\nimport '@emotion/react';\nimport '@emotion/styled';\nimport '@radix-ui/colors';\nimport 'detect-browser';\nimport 'react-qr-code';\nimport '@radix-ui/react-dialog';\nimport '@radix-ui/react-icons';\n\nconst RainbowScan = _ref => {\n  let {\n    onBack,\n    onConnected,\n    onGetStarted,\n    walletConfig,\n    hideBackButton\n  } = _ref;\n  const createInstance = useCreateWalletInstance();\n  const [qrCodeUri, setQrCodeUri] = useState();\n  const {\n    setConnectedWallet,\n    chainToConnect,\n    setConnectionStatus\n  } = useWalletContext();\n  const scanStarted = useRef(false);\n  useEffect(() => {\n    if (scanStarted.current) {\n      return;\n    }\n    scanStarted.current = true;\n    const rainbow = createInstance(walletConfig);\n    setConnectionStatus(\"connecting\");\n    rainbow.connectWithQrCode({\n      chainId: chainToConnect?.chainId,\n      onQrCodeUri(uri) {\n        setQrCodeUri(uri);\n      },\n      onConnected() {\n        setConnectedWallet(rainbow);\n        onConnected();\n      }\n    });\n  }, [createInstance, setConnectedWallet, chainToConnect, onConnected, walletConfig, setConnectionStatus]);\n  return /*#__PURE__*/jsx(ScanScreen, {\n    onBack: onBack,\n    onGetStarted: onGetStarted,\n    qrCodeUri: qrCodeUri,\n    walletName: walletConfig.meta.name,\n    walletIconURL: walletConfig.meta.iconURL,\n    hideBackButton: hideBackButton\n  });\n};\n\nconst RainbowConnectUI = props => {\n  const [screen, setScreen] = useState(\"connecting\");\n  const {\n    walletConfig,\n    close\n  } = props;\n  const connect = useConnect();\n  const hideBackButton = props.supportedWallets.length === 1;\n  const {\n    goBack\n  } = props;\n  const connectPrompted = useRef(false);\n  useEffect(() => {\n    if (connectPrompted.current) {\n      return;\n    }\n\n    // if loading\n    (async () => {\n      // on mobile, open rainbow app link\n      if (isMobile()) {\n        window.open(\"https://rnbwapp.com\");\n      } else {\n        // on desktop, show the rainbow scan qr code\n        setScreen(\"scanning\");\n      }\n    })();\n  }, [walletConfig, close, connect, goBack]);\n  if (screen === \"connecting\") {\n    return /*#__PURE__*/jsx(ConnectingScreen, {\n      hideBackButton: hideBackButton,\n      onBack: props.goBack,\n      walletName: walletConfig.meta.name,\n      walletIconURL: walletConfig.meta.iconURL,\n      supportLink: \"https://rainbow.me/\"\n    });\n  }\n  if (screen === \"get-started\") {\n    return /*#__PURE__*/jsx(GetStartedScreen, {\n      walletIconURL: walletConfig.meta.iconURL,\n      walletName: walletConfig.meta.name,\n      chromeExtensionLink: walletConfig.meta.urls?.chrome,\n      googlePlayStoreLink: walletConfig.meta.urls?.android,\n      appleStoreLink: walletConfig.meta.urls?.ios,\n      onBack: () => {\n        setScreen(\"scanning\");\n      }\n    });\n  }\n  if (screen === \"scanning\") {\n    return /*#__PURE__*/jsx(RainbowScan, {\n      onBack: props.goBack,\n      onConnected: close,\n      onGetStarted: () => {\n        setScreen(\"get-started\");\n      },\n      hideBackButton: hideBackButton,\n      walletConfig: walletConfig\n    });\n  }\n  return null;\n};\n\nconst rainbowWallet = options => {\n  return {\n    id: \"rainbow\",\n    meta: {\n      name: \"Rainbow Wallet\",\n      iconURL: \"ipfs://QmSZn47p4DVVBfzvg9BAX2EqwnPxkT1YAE7rUnrtd9CybQ/rainbow-logo.png\",\n      urls: {\n        android: \"https://rnbwapp.com/e/Va41HWS6Oxb\",\n        ios: \"https://rnbwapp.com/e/OeMdmkJ6Oxb\"\n      }\n    },\n    create: walletOptions => {\n      return new WalletConnect({\n        ...walletOptions,\n        walletId: \"rainbow\",\n        projectId: options?.projectId,\n        qrcode: false\n      });\n    },\n    connectUI: RainbowConnectUI,\n    isInstalled() {\n      return false;\n    }\n  };\n};\n\nexport { rainbowWallet };\n"],
  "mappings": "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",
  "names": []
}
